homeassistant:
  allowlist_external_dirs:
    - /config/HAMY/TNB

# Monthly AFA charge (user-editable)
input_number:
  afa_fixed_charge:
    name: AFA Fixed Charge
    unit_of_measurement: "RM"
    min: 0
    max: 100
    step: 0.01
    mode: box

utility_meter:
  monthly_energy_tou:
    source: sensor.energy_consumed  # Replace with actual sensor
    cycle: monthly
    offset:
      days: 8
    tariffs:
      - peak
      - offpeak

  monthly_energy_new:
    source: sensor.energy_consumed  # Replace with actual sensor
    cycle: monthly
    offset:
      days: 8
    tariffs:
      - normal

sensor:
  - platform: template
    sensors:
      tnb_peak_kwh:
        friendly_name: "TNB Peak kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_tou_peak') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter

      tnb_offpeak_kwh:
        friendly_name: "TNB Offpeak kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_tou_offpeak') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter

      tnb_general_kwh:
        friendly_name: "TNB General kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_new_normal') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter

automation:
  - id: tnb_peak_active
    alias: TNB Peak Active
    trigger:
      - platform: time
        at: "14:00:00"
    condition:
      - condition: time
        weekday: [mon, tue, wed, thu, fri]
      - condition: state
        entity_id: calendar.malaysia_10 #From Holiday Integration entity
        state: "off"  # Only activate on working days
    action:
      - service: select.select_option
        target:
          entity_id: select.monthly_energy_tou
        data:
          option: peak
    mode: single

  - id: tnb_offpeak_active
    alias: TNB Offpeak Active
    trigger:
      - platform: time
        at: "22:00:00"
    action:
      - service: select.select_option
        target:
          entity_id: select.monthly_energy_tou
        data:
          option: offpeak
    mode: single

template:
  - sensor:
      # EEI Rebate Scheme
      - name: "EEI Rebate Rate"
        unique_id: eei_rebate_rate
        unit_of_measurement: "RM/kWh"
        state: >
          {% set usage = states('sensor.tnb_general_kwh') | float %}
          {% if usage <= 200 %} 0.25
          {% elif usage <= 250 %} 0.245
          {% elif usage <= 300 %} 0.225
          {% elif usage <= 350 %} 0.21
          {% elif usage <= 400 %} 0.17
          {% elif usage <= 450 %} 0.145
          {% elif usage <= 500 %} 0.12
          {% elif usage <= 550 %} 0.105
          {% elif usage <= 600 %} 0.09
          {% elif usage <= 650 %} 0.075
          {% elif usage <= 700 %} 0.055
          {% elif usage <= 750 %} 0.045
          {% elif usage <= 800 %} 0.04
          {% elif usage <= 850 %} 0.025
          {% elif usage <= 900 %} 0.01
          {% elif usage <= 1000 %} 0.005
          {% else %} 0.00
          {% endif %}

      # Retail
      - name: "Monthly Energy Retail Charge"
        unique_id: monthly_energy_retail_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set usage = states('sensor.tnb_general_kwh') | float %}
          {% set retail = 0.0 if usage <= 600 else 10.0 %}
          {{ "%.2f" | format(retail) }}

      # AFA
      - name: "Energy AFA Charge" 
        unique_id: energy_afa_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set usage = states('sensor.tnb_general_kwh') | float %}
          {% set afa = 0.0 if usage <= 600 else states('input_number.afa_fixed_charge') | float %}
          {{ "%.2f" | format(afa) }}

      # Above 1500kWh
      - name: "Above 1500 Charge"
        unique_id: above_1500_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set usage = states('sensor.tnb_general_kwh') | float %}
          {% set charge = 0.10 if usage > 1500 else 0.00 %}
          {{ "%.2f" | format(charge) }}

      # KWTBB above 300kWh
      - name: "KWTBB"
        unique_id: kwtbb
        state_class: measurement
        state: >
          {% set usage = states('sensor.tnb_general_kwh') | float %}
          {% set charge = 0.016 if usage > 300 else 0.00 %}
          {{ charge }}

      # Tariffs
      - name: "General Charge"
        unique_id: general_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set extra = states('sensor.above_1500_charge') | float %}
          {% set energy = 0.2703 %}
          {% set capacity = 0.0455 %}
          {% set network = 0.1285 %}
          {{ (extra + energy + capacity + network) | round(4) }}

      - name: "Peak Charge"
        unique_id: peak_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set extra = states('sensor.above_1500_charge') | float %}
          {% set energy = 0.2852 %}
          {% set capacity = 0.0455 %}
          {% set network = 0.1285 %}
          {{ (extra + energy + capacity + network) | round(2) }}

      - name: "Offpeak Charge"
        unique_id: offpeak_charge
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set extra = states('sensor.above_1500_charge') | float %}
          {% set energy = 0.2443 %}
          {% set capacity = 0.0455 %}
          {% set network = 0.1285 %}
          {{ (extra + energy + capacity + network) | round(2) }}

      # Energy Cost
      - name: "General Energy New Cost"
        unique_id: general_energy_new_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set kwh = states('sensor.tnb_general_kwh') | float %}
          {% set tariff = states('sensor.general_charge') | float %}
          {{ (kwh * tariff) | round(2) }}

      - name: "General Total Energy Cost"
        unique_id: general_total_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set general = states('sensor.general_energy_new_cost') | float %}
          {% set afa = states('sensor.energy_afa_charge') | float %}
          {% set retail = states('sensor.monthly_energy_retail_charge') | float %}
          {{ (general + afa + retail) | round(2) }}

      - name: "General Rebate"
        unique_id: general_rebate
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set kwh = states('sensor.tnb_general_kwh') | float %}
          {% set rebate = states('sensor.eei_rebate_rate') | float %}
          {{ (kwh * rebate) | round(2) }}

      - name: "Monthly Total Energy General Bill with EEI"
        unique_id: monthly_total_energy_general_bill_with_eei
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set base = states('sensor.general_total_energy_cost') | float %}
          {% set rebate = states('sensor.general_rebate') | float %}
          {{ (base - rebate) | round(2) }}

      - name: "General KWTBB"
        unique_id: general_kwtbb
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set total = states('sensor.monthly_total_energy_general_bill_with_eei') | float %}
          {% set kwtbb = states('sensor.kwtbb') | float %}
          {{ (total * kwtbb) | round(2) }}

      - name: "Grand Total General Bill without ST"
        unique_id: grand_total_general_bill_without_st
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set base = states('sensor.monthly_total_energy_general_bill_with_eei') | float %}
          {% set kwtbb = states('sensor.general_kwtbb') | float %}
          {{ (base + kwtbb) | round(2) }}

######################TOU#######################
      # Energy Cost
      - name: "Peak Energy Cost"
        unique_id: peak_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set kwh = states('sensor.tnb_peak_kwh') | float %}
          {% set tariff = states('sensor.peak_charge') | float %}
          {{ (kwh * tariff) | round(2) }}

      - name: "OffPeak Energy Cost"
        unique_id: offpeak_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set kwh = states('sensor.tnb_offpeak_kwh') | float %}
          {% set tariff = states('sensor.offpeak_charge') | float %}
          {{ (kwh * tariff) | round(2) }}

      - name: "TOU Total Energy Cost"
        unique_id: tou_total_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set peak = states('sensor.peak_energy_cost') | float %}
          {% set offpeak = states('sensor.offpeak_energy_cost') | float %}
          {% set afa = states('sensor.energy_afa_charge') | float %}
          {% set retail = states('sensor.monthly_energy_retail_charge') | float %}
          {{ (peak + offpeak + afa + retail) | round(2) }}

      - name: "ToU Rebate"
        unique_id: tou_rebate
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set peak = states('sensor.tnb_peak_kwh') | float %}
          {% set offpeak = states('sensor.tnb_offpeak_kwh') | float %}
          {% set total = peak + offpeak | float %}
          {% set rebate = states('sensor.eei_rebate_rate') | float %}
          {{ (total * rebate) | round(2) }}

      - name: "Monthly Total Energy ToU Bill with EEI"
        unique_id: monthly_total_energy_tou_bill_with_eei
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set base = states('sensor.tou_total_energy_cost') | float %}
          {% set rebate = states('sensor.tou_rebate') | float %}
          {{ (base - rebate) | round(2) }}

      - name: "ToU KWTBB"
        unique_id: tou_kwtbb
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set total = states('sensor.monthly_total_energy_tou_bill_with_eei') | float %}
          {% set kwtbb = states('sensor.kwtbb') | float %}
          {{ (total * kwtbb) | round(2) }}

      - name: "Grand Total ToU Bill without ST"
        unique_id: grand_total_tou_bill_without_st
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set base = states('sensor.monthly_total_energy_tou_bill_with_eei') | float %}
          {% set kwtbb = states('sensor.tou_kwtbb') | float %}
          {{ (base + kwtbb) | round(2) }}
          
  - sensor:
      - name: "Peak percentage"
        unique_id: peak_percentage
        unit_of_measurement: "%"
        state: >
          {% set peak = states('sensor.tnb_peak_kwh') | float %}
          {% set offpeak = states('sensor.tnb_offpeak_kwh') | float %}
          {% set total = peak + offpeak %}
          {{ (peak / total * 100) | round(2) if total > 0 else 0 }}

      - name: "Offpeak percentage"
        unique_id: offpeak_percentage
        unit_of_measurement: "%"
        state: >
          {% set peak = states('sensor.tnb_peak_kwh') | float %}
          {% set offpeak = states('sensor.tnb_offpeak_kwh') | float %}
          {% set total = peak + offpeak %}
          {{ (offpeak / total * 100) | round(2) if total > 0 else 0 }}
          
          
          
