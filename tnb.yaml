homeassistant:
  allowlist_external_dirs:
    - /config/HAMY/TNB

# Monthly AFA charge (user-editable)
input_number:
  afa_fixed_charge:
    name: AFA Fixed Charge
    initial: 0.00
    min: 0
    max: 50
    step: 0.01
    unit_of_measurement: "RM"

utility_meter:
  monthly_energy_tou:
    source: sensor.energy_consumed # Change own sensors
    cycle: monthly
    offset:
      days: 8
    tariffs:
      - peak
      - offpeak

  monthly_energy_new:
    source: sensor.energy_consumed # Change own sensors
    cycle: monthly
    offset:
      days: 8
    tariffs:
      - normal

#Reading conversion and calibration
sensor:
  - platform: template
    sensors:
      tnb_peak_kw:
        friendly_name: "TNB Peak kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_tou_peak') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter

      tnb_offpeak_kw:
        friendly_name: "TNB Offpeak kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_tou_offpeak') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter

      tnb_general_kw:
        friendly_name: "TNB General kWh"
        unit_of_measurement: "kWh"
        value_template: >
          {{ (states('sensor.monthly_energy_new_normal') | float / 1000 * 0.9872) | round(3) }}
        icon_template: mdi:counter


template:
  - sensor:
#ToU
      - name: "TOU Peak Energy Cost"
        unique_id: tou_peak_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {{ (states('sensor.tnb_peak_kw') | float * 0.4592) | round(2) }}

      - name: "TOU Offpeak Energy Cost"
        unique_id: tou_offpeak_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {{ (states('sensor.tnb_offpeak_kw') | float * 0.4183) | round(2) }}

      - name: "TOU Total Energy Cost"
        unique_id: tou_total_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set peak = states('sensor.tou_peak_energy_cost') | float %}
          {% set offpeak = states('sensor.tou_offpeak_energy_cost') | float %}
          {% set afa = states('input_number.afa_fixed_charge') | float %}
          {% set retail = states('sensor.monthly_energy_retail_charge') | float %}
          {{ (peak + offpeak + afa + retail) | round(2) }}
          
#General          
      - name: "General Energy New Cost"
        unique_id: general_energy_new_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {{ (states('sensor.tnb_general_kw') | float * 0.4443) | round(2) }}

      - name: "General Total Energy Cost"
        unique_id: general_total_energy_cost
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set general = states('sensor.general_energy_new_cost') | float %}
          {% set afa = states('input_number.afa_fixed_charge') | float %}
          {% set retail = states('sensor.monthly_energy_retail_charge') | float %}
          {{ (general + afa + retail) | round(2) }}

#EEI Rebate Scheme
      - name: "Monthly Energy EEI Rebate"
        unique_id: monthly_energy_eei_rebate
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set usage = states('sensor.tnb_general_kw') | float %}
          {% set rebate_rate = (
            25.0 if usage <= 200 else
            24.5 if usage <= 250 else
            22.5 if usage <= 300 else
            21.0 if usage <= 350 else
            17.0 if usage <= 400 else
            14.5 if usage <= 450 else
            12.0 if usage <= 500 else
            10.5 if usage <= 550 else
            9.0 if usage <= 600 else
            7.5 if usage <= 650 else
            5.5 if usage <= 700 else
            4.5 if usage <= 750 else
            4.0 if usage <= 800 else
            2.5 if usage <= 850 else
            1.0 if usage <= 900 else
            0.5 if usage <= 1000 else
            0.0
          ) %}
          {{ ((usage * rebate_rate) / 100) | round(2) }}
          
#Retail          
      - name: "Monthly Energy Retail Charge"
        unique_id: monthly_energy_retail
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
         {% set usage = states('sensor.tnb_general_kw') | float %}
         {% set retail = 0.0 if usage <= 600 else 10.0 %}
         {{ "%.2f" | format(retail) }}
         
#Total sum with rebate
      - name: "Monthly Total Energy General Bill with EEI"
        unique_id: monthly_total_energy_general_bill_with_eei
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
         {% set base = states('sensor.general_total_energy_cost') | float %}
         {% set rebate = states('sensor.monthly_energy_eei_rebate') | float %}
         {{ (base - rebate) | round(2) }}
          
      - name: "Monthly Total Energy ToU Bill with EEI"
        unique_id: monthly_total_energy_tou_bill_with_eei
        unit_of_measurement: "RM"
        device_class: monetary
        state: >
          {% set base = states('sensor.tou_total_energy_cost') | float %}
          {% set rebate = states('sensor.monthly_energy_eei_rebate') | float %}
          {{ (base - rebate) | round(2) }}
          
automation:
  - id: tnb_peak_active
    alias: TNB Peak Active
    trigger:
      - platform: time
        at: "14:00:00"
    condition:
      - condition: time
        weekday: [mon, tue, wed, thu, fri]
      - condition: state
        entity_id: calendar.malaysia_10 #From Holiday Integration entity
        state: "off"  # Only activate on working days
    action:
      - service: select.select_option
        target:
          entity_id: select.monthly_energy_tou
        data:
          option: peak
    mode: single

  - id: tnb_offpeak_active
    alias: TNB Offpeak Active
    trigger:
      - platform: time
        at: "22:00:00"
    action:
      - service: select.select_option
        target:
          entity_id: select.monthly_energy_tou
        data:
          option: offpeak
    mode: single
